"""Benchmark of basic non-linear functions, implemented in origional MP-SPDZ.
"""
import mpc_nonlinear as mn

if (str(program.args[2]) == "ring"):
    program.use_trunc_pr = True
    program.use_split(3)
    print("compiled for ring")
elif (str(program.args[2]) == "field"):
    program.use_edabit(True)
    print("compiled for field")
else:
    print("compiled for others")


func_name = str(program.args[1])
if func_name == "func_sqrt":
    func_name = "sqrt"
if func_name == "func_log":
    func_name = "log"
if func_name == "func_exp":
    func_name = "exp"

# Set the sfixed settings.
sfix.set_precision(48)
N = 100
x = Array.create_from([sfix(i) for i in range(N)])

func_name = "mn."+"mpc_"+func_name
print("func_name: ", func_name)

if (str(program.args[2]) == "ring"):
    start_timer(1)
    for i in range(N):
        eval(func_name)(x[i])
    stop_timer(1)

else:
    start_timer(1)
    @for_range_opt(N)
    def _(i):
        eval(func_name)(x[i])
    stop_timer(1)
    # start_timer(1)
    # for i in range(N):
    #     eval(func_name)(x[i])
    # stop_timer(1)