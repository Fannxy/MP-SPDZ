Using SPDZ2k security parameter 64
Using statistical security parameter 40
Trying to run 64-bit computation
Current working directory: "/root/MP-SPDZ"
comp res = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
Compiler: ./compile.py -R 64 comp
Spent 0.00218601 seconds (0.018584 MB, 29 rounds) on the online phase and 0.734065 seconds (36.6189 MB, 166 rounds) on the preprocessing/offline phase.
Join timer: 0 736.254
Finish timer: 0.00643635
Communication details:
Broadcasting 0.001404 MB in 53 rounds, taking 0.0611484 seconds
Exchanging one-to-one 12.5755 MB in 34 rounds, taking 0.0146647 seconds
Receiving directly 0.072066 MB in 18 rounds, taking 0.00227611 seconds
Receiving one-to-one 23.9884 MB in 34 rounds, taking 0.209023 seconds
Sending directly 0.072066 MB in 18 rounds, taking 0.000268454 seconds
Sending one-to-one 23.9884 MB in 34 rounds, taking 0.0108446 seconds
Sending/receiving 6.4e-05 MB in 4 rounds, taking 0.000151044 seconds
CPU time = 0.475811
The following benchmarks are including preprocessing (offline phase).
Time = 0.742801 seconds 
Data sent = 36.6374 MB in ~195 rounds (party 0 only)
Global data sent = 73.2749 MB (all parties)
Actual cost of program:
  Type int
           560        Triples
           320           Bits
            20          Opens
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_edabit(True)
This virtual machine was compiled with GCC. Recompile with 'CXX = clang++' in 'CONFIG.mine' for optimal performance.
Coordination took 0.000469022 seconds
Command line: ./spdz2k-party.x -N 2 -e --ip-file-name /HOST -p 0 -v comp
