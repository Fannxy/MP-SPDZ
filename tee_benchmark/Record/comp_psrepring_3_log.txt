Using statistical security parameter 40
Trying to run 64-bit computation
Current working directory: "/root/MP-SPDZ"
comp res = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
Compiler: ./compile.py -R 64 comp
Spent 0.0181701 seconds (0.022338 MB, 16 rounds) on the online phase and 0.00190093 seconds (0.016596 MB, 14 rounds) on the preprocessing/offline phase.
Join timer: 0 20.0724
Finish timer: 0.000314019
Communication details:
Broadcasting 0.000283 MB in 10 rounds, taking 0.00063831 seconds
Passing around 0.03832 MB in 14 rounds, taking 0.0176764 seconds
Receiving directly 4.8e-05 MB in 3 rounds, taking 0.000172302 seconds
Sending directly 4.8e-05 MB in 3 rounds, taking 3.3059e-05 seconds
CPU time = 0.00282437
The following benchmarks are including preprocessing (offline phase).
Time = 0.0204565 seconds 
Data sent = 0.038934 MB in ~30 rounds (party 0 only)
Global data sent = 0.116802 MB (all parties)
Actual cost of program:
  Type int
           320           Bits
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(3)
This virtual machine was compiled with GCC. Recompile with 'CXX = clang++' in 'CONFIG.mine' for optimal performance.
Command line: ./ps-rep-ring-party.x --ip-file-name /HOST -p 0 -v comp
