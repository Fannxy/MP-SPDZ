Using statistical security parameter 40
Trying to run 64-bit computation
Current working directory: "/root/MP-SPDZ"
comp res = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
Compiler: ./compile.py -R 64 comp
Spent 0.0010872 seconds (0.00912 MB, 16 rounds) on the online phase and 0.00677911 seconds (0.615312 MB, 43 rounds) on the preprocessing/offline phase.
Join timer: 0 7.86251
Finish timer: 0.00077733
Communication details:
Exchanging one-to-one 0.286816 MB in 9 rounds, taking 0.000697572 seconds
Receiving directly 0.00912 MB in 8 rounds, taking 0.00076936 seconds
Receiving one-to-one 0.336176 MB in 17 rounds, taking 0.000189123 seconds
Sending directly 0.00912 MB in 8 rounds, taking 0.00010284 seconds
Sending one-to-one 0.328496 MB in 17 rounds, taking 1.832e-05 seconds
CPU time = 0.0073859
The following benchmarks are including preprocessing (offline phase).
Time = 0.00872014 seconds 
Data sent = 0.624432 MB in ~59 rounds (party 0 only)
Global data sent = 1.25654 MB (all parties)
Actual cost of program:
  Type int
           560        Triples
           320           Bits
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_split(2)
This virtual machine was compiled with GCC. Recompile with 'CXX = clang++' in 'CONFIG.mine' for optimal performance.
Command line: ./semi2k-party.x -N 2 -e --ip-file-name /HOST -p 0 -v comp
