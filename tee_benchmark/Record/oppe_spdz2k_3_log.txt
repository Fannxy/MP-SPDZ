Using SPDZ2k security parameter 64
Using statistical security parameter 40
Trying to run 64-bit computation
Current working directory: "/root/MP-SPDZ"
Compiler: ./compile.py -R 64 sigmoid
Spent 0.00515883 seconds (0.18424 MB, 27 rounds) on the online phase and 1.89358 seconds (175.938 MB, 430 rounds) on the preprocessing/offline phase.
Join timer: 0 1898.74
Finish timer: 0.00520867
Communication details:
Broadcasting 0.00293 MB in 109 rounds, taking 0.0761565 seconds
Exchanging one-to-one 126.32 MB in 130 rounds, taking 0.0886523 seconds
Receiving directly 0.726466 MB in 41 rounds, taking 0.00598208 seconds
Receiving one-to-one 49.0729 MB in 66 rounds, taking 0.203093 seconds
Sending directly 0.726466 MB in 41 rounds, taking 0.00091539 seconds
Sending one-to-one 49.0729 MB in 66 rounds, taking 0.0107021 seconds
Sending/receiving 6.4e-05 MB in 4 rounds, taking 0.000150311 seconds
CPU time = 1.61914
The following benchmarks are including preprocessing (offline phase).
Time = 1.90406 seconds 
Data sent = 176.122 MB in ~457 rounds (party 0 only)
Global data sent = 352.245 MB (all parties)
Actual cost of program:
  Type int
          5700        Triples
          3200           Bits
           100          Opens
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_edabit(True)
This virtual machine was compiled with GCC. Recompile with 'CXX = clang++' in 'CONFIG.mine' for optimal performance.
Coordination took 0.00133434 seconds
Command line: ./spdz2k-party.x -N 2 -e --ip-file-name /HOST -p 0 -v sigmoid
