Using statistical security parameter 40
Trying to run 64-bit computation
Current working directory: "/"
Starting timer 1 at 0 (0 MB, 0 rounds) after 3.2115e-05
Stopped timer 1 at 55.4387 (1326.09 MB, 42225 rounds)
guess 9
Compiler: ./compile.py -R 64 benchmark_net
	503 triples of Z2^64 left
	888 dabits of Z2^64 left
Spent 4.87047 seconds (20.2696 MB, 26862 rounds) on the online phase and 50.5817 seconds (1305.85 MB, 15395 rounds) on the preprocessing/offline phase.
Join timer: 0 55452
Finish timer: 0.0740299
Communication details:
Exchanging one-to-one 643.614 MB in 3777 rounds, taking 2.2735 seconds
Receiving directly 20.2696 MB in 13431 rounds, taking 2.18872 seconds
Receiving one-to-one 671.69 MB in 5809 rounds, taking 0.186775 seconds
Sending directly 20.2696 MB in 13431 rounds, taking 0.917589 seconds
Sending one-to-one 662.24 MB in 5809 rounds, taking 0.0523433 seconds
CPU time = 52.9265
The following benchmarks are including preprocessing (offline phase).
Time = 55.5263 seconds 
Time1 = 55438.7 ms (1326.09 MB)
Data sent = 1326.12 MB in ~42257 rounds (party 0 only)
Global data sent = 2661.7 MB (all parties)
Actual cost of program:
  Type int
       1256497        Triples
        786568           Bits
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_trunc_pr = True
	program.use_split(2)
This virtual machine was compiled with GCC. Recompile with 'CXX = clang++' in 'CONFIG.mine' for optimal performance.
Command line: semi2k-party.x -N 2 -e --ip-file-name /HOST -p 0 -v benchmark_net
