Using statistical security parameter 40
No modulus found in /Player-Data//2-Dp-128/Params-Data, generating 128-bit prime
Current working directory: "/root/MP-SPDZ"
Current working directory: "/root/MP-SPDZ"
Current working directory: "/root/MP-SPDZ"
Current working directory: "/root/MP-SPDZ"
Current working directory: "/root/MP-SPDZ"
Current working directory: "/root/MP-SPDZ"
Current working directory: "/root/MP-SPDZ"
Current working directory: "/root/MP-SPDZ"
Current working directory: "/root/MP-SPDZ"
Stopped timer 0 at 0.0989973 (0.029481 MB, 30 rounds)
Starting timer 1 at 0 (0 MB, 0 rounds) after 2.844e-06
Stopped timer 1 at 6.162e-06 (0 MB, 0 rounds)
Starting timer 0 at 0.0989973 (0.029481 MB, 30 rounds) after 5.9706e-05
Elapsed time: 0.175936
packed ORAM init 0/157
Elapsed time: 0.235693
packed ORAM init 1/157
Elapsed time: 0.305651
packed ORAM init 2/157
Elapsed time: 0.337396
packed ORAM init 3/157
Elapsed time: 0.407309
packed ORAM init 4/157
Elapsed time: 0.477219
packed ORAM init 5/157
Elapsed time: 0.547317
packed ORAM init 6/157
Elapsed time: 0.587243
packed ORAM init 7/157
Elapsed time: 0.657167
packed ORAM init 8/157
Elapsed time: 0.717116
packed ORAM init 9/157
Elapsed time: 0.786972
packed ORAM init 10/157
Elapsed time: 0.827074
packed ORAM init 11/157
Elapsed time: 0.887014
packed ORAM init 12/157
Elapsed time: 0.953499
packed ORAM init 13/157
Elapsed time: 1.0231
packed ORAM init 14/157
Elapsed time: 1.05832
packed ORAM init 15/157
Elapsed time: 1.127
packed ORAM init 16/157
Elapsed time: 1.17877
packed ORAM init 17/157
Elapsed time: 1.20533
packed ORAM init 18/157
Elapsed time: 1.25636
packed ORAM init 19/157
Elapsed time: 1.30677
packed ORAM init 20/157
Elapsed time: 1.3563
packed ORAM init 21/157
Elapsed time: 1.38354
packed ORAM init 22/157
Elapsed time: 1.44783
packed ORAM init 23/157
Elapsed time: 1.51779
packed ORAM init 24/157
Elapsed time: 1.57782
packed ORAM init 25/157
Elapsed time: 1.61784
packed ORAM init 26/157
Elapsed time: 1.67787
packed ORAM init 27/157
Elapsed time: 1.7479
packed ORAM init 28/157
Elapsed time: 1.80796
packed ORAM init 29/157
Elapsed time: 1.83786
packed ORAM init 30/157
Elapsed time: 1.90854
packed ORAM init 31/157
Elapsed time: 1.968
packed ORAM init 32/157
Elapsed time: 1.99795
packed ORAM init 33/157
Elapsed time: 2.05792
packed ORAM init 34/157
Elapsed time: 2.11791
packed ORAM init 35/157
Elapsed time: 2.18792
packed ORAM init 36/157
Elapsed time: 2.22873
packed ORAM init 37/157
Elapsed time: 2.29867
packed ORAM init 38/157
Elapsed time: 2.36871
packed ORAM init 39/157
Elapsed time: 2.43893
packed ORAM init 40/157
Elapsed time: 2.47885
packed ORAM init 41/157
Elapsed time: 2.53879
packed ORAM init 42/157
Elapsed time: 2.6088
packed ORAM init 43/157
Elapsed time: 2.67872
packed ORAM init 44/157
Elapsed time: 2.70876
packed ORAM init 45/157
Elapsed time: 2.76884
packed ORAM init 46/157
Elapsed time: 2.83882
packed ORAM init 47/157
Elapsed time: 2.86884
packed ORAM init 48/157
Elapsed time: 2.9289
packed ORAM init 49/157
Elapsed time: 2.99883
packed ORAM init 50/157
Elapsed time: 3.05886
packed ORAM init 51/157
Elapsed time: 3.08883
packed ORAM init 52/157
Elapsed time: 3.15885
packed ORAM init 53/157
Elapsed time: 3.2289
packed ORAM init 54/157
Elapsed time: 3.29889
packed ORAM init 55/157
Elapsed time: 3.33894
packed ORAM init 56/157
Elapsed time: 3.39888
packed ORAM init 57/157
Elapsed time: 3.45892
packed ORAM init 58/157
Elapsed time: 3.51884
packed ORAM init 59/157
Elapsed time: 3.54889
packed ORAM init 60/157
Elapsed time: 3.60892
packed ORAM init 61/157
Elapsed time: 3.67919
packed ORAM init 62/157
Elapsed time: 3.70957
packed ORAM init 63/157
Elapsed time: 3.76913
packed ORAM init 64/157
Elapsed time: 3.83899
packed ORAM init 65/157
Elapsed time: 3.89899
packed ORAM init 66/157
Elapsed time: 3.92921
packed ORAM init 67/157
Elapsed time: 3.98916
packed ORAM init 68/157
Elapsed time: 4.04905
packed ORAM init 69/157
Elapsed time: 4.109
packed ORAM init 70/157
Elapsed time: 4.13902
packed ORAM init 71/157
Elapsed time: 4.20913
packed ORAM init 72/157
Elapsed time: 4.27907
packed ORAM init 73/157
Elapsed time: 4.34919
packed ORAM init 74/157
Elapsed time: 4.37913
packed ORAM init 75/157
Elapsed time: 4.43912
packed ORAM init 76/157
Elapsed time: 4.50926
packed ORAM init 77/157
Elapsed time: 4.54928
packed ORAM init 78/157
Elapsed time: 4.6091
packed ORAM init 79/157
Elapsed time: 4.67935
packed ORAM init 80/157
Elapsed time: 4.74917
packed ORAM init 81/157
Elapsed time: 4.77918
packed ORAM init 82/157
Elapsed time: 4.83929
packed ORAM init 83/157
Elapsed time: 4.9092
packed ORAM init 84/157
Elapsed time: 4.97918
packed ORAM init 85/157
Elapsed time: 5.00919
packed ORAM init 86/157
Elapsed time: 5.0793
packed ORAM init 87/157
Elapsed time: 5.14925
packed ORAM init 88/157
Elapsed time: 5.21922
packed ORAM init 89/157
Elapsed time: 5.24922
packed ORAM init 90/157
Elapsed time: 5.30923
packed ORAM init 91/157
Elapsed time: 5.37924
packed ORAM init 92/157
Elapsed time: 5.41926
packed ORAM init 93/157
Elapsed time: 5.47935
packed ORAM init 94/157
Elapsed time: 5.53931
packed ORAM init 95/157
Elapsed time: 5.59932
packed ORAM init 96/157
Elapsed time: 5.62934
packed ORAM init 97/157
Elapsed time: 5.69931
packed ORAM init 98/157
Elapsed time: 5.76929
packed ORAM init 99/157
Elapsed time: 5.82933
packed ORAM init 100/157
Elapsed time: 5.86935
packed ORAM init 101/157
Elapsed time: 5.92942
packed ORAM init 102/157
Elapsed time: 5.98943
packed ORAM init 103/157
Elapsed time: 6.05941
packed ORAM init 104/157
Elapsed time: 6.0994
packed ORAM init 105/157
Elapsed time: 6.15937
packed ORAM init 106/157
Elapsed time: 6.22941
packed ORAM init 107/157
Elapsed time: 6.28938
packed ORAM init 108/157
Elapsed time: 6.31948
packed ORAM init 109/157
Elapsed time: 6.37941
packed ORAM init 110/157
Elapsed time: 6.4496
packed ORAM init 111/157
Elapsed time: 6.47947
packed ORAM init 112/157
Elapsed time: 6.54034
packed ORAM init 113/157
Elapsed time: 6.59984
packed ORAM init 114/157
Elapsed time: 6.65982
packed ORAM init 115/157
Elapsed time: 6.69983
packed ORAM init 116/157
Elapsed time: 6.76004
packed ORAM init 117/157
Elapsed time: 6.83019
packed ORAM init 118/157
Elapsed time: 6.89991
packed ORAM init 119/157
Elapsed time: 6.94005
packed ORAM init 120/157
Elapsed time: 7
packed ORAM init 121/157
Elapsed time: 7.06998
packed ORAM init 122/157
Elapsed time: 7.12992
packed ORAM init 123/157
Elapsed time: 7.16153
packed ORAM init 124/157
Elapsed time: 7.23147
packed ORAM init 125/157
Elapsed time: 7.29153
packed ORAM init 126/157
Elapsed time: 7.32151
packed ORAM init 127/157
Elapsed time: 7.38155
packed ORAM init 128/157
Elapsed time: 7.45157
packed ORAM init 129/157
Elapsed time: 7.5116
packed ORAM init 130/157
Elapsed time: 7.55163
packed ORAM init 131/157
Elapsed time: 7.62169
packed ORAM init 132/157
Elapsed time: 7.68191
packed ORAM init 133/157
Elapsed time: 7.75169
packed ORAM init 134/157
Elapsed time: 7.78168
packed ORAM init 135/157
Elapsed time: 7.84168
packed ORAM init 136/157
Elapsed time: 7.91166
packed ORAM init 137/157
Elapsed time: 7.97169
packed ORAM init 138/157
Elapsed time: 8.01178
packed ORAM init 139/157
Elapsed time: 8.07174
packed ORAM init 140/157
Elapsed time: 8.14165
packed ORAM init 141/157
Elapsed time: 8.18175
packed ORAM init 142/157
Elapsed time: 8.24171
packed ORAM init 143/157
Elapsed time: 8.31174
packed ORAM init 144/157
Elapsed time: 8.38173
packed ORAM init 145/157
Elapsed time: 8.41176
packed ORAM init 146/157
Elapsed time: 8.47178
packed ORAM init 147/157
Elapsed time: 8.54177
packed ORAM init 148/157
Elapsed time: 8.61175
packed ORAM init 149/157
Elapsed time: 8.64183
packed ORAM init 150/157
Elapsed time: 8.70191
packed ORAM init 151/157
Elapsed time: 8.77191
packed ORAM init 152/157
Elapsed time: 8.84186
packed ORAM init 153/157
Elapsed time: 8.8819
packed ORAM init 154/157
Elapsed time: 8.9419
packed ORAM init 155/157
Elapsed time: 9.01194
packed ORAM init 156/157
packed ORAM init done
1
Compiler: ./compile.py oram_tutorial
	834 triples of gfp left
	296 dabits of gfp left
	876 triples of gfp left
Significant amount of unused triples of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	796 dabits of gfp left
Significant amount of unused dabits of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	876 triples of gfp left
Significant amount of unused triples of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	796 dabits of gfp left
Significant amount of unused dabits of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	876 triples of gfp left
Significant amount of unused triples of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	796 dabits of gfp left
Significant amount of unused dabits of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	876 triples of gfp left
Significant amount of unused triples of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	796 dabits of gfp left
Significant amount of unused dabits of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	876 triples of gfp left
Significant amount of unused triples of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	796 dabits of gfp left
Significant amount of unused dabits of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	752 triples of gfp left
Significant amount of unused triples of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	568 dabits of gfp left
	752 triples of gfp left
Significant amount of unused triples of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	568 dabits of gfp left
	752 triples of gfp left
Significant amount of unused triples of gfp distorting the benchmark. For more accurate benchmarks, consider reducing the batch size with --batch-size.
	568 dabits of gfp left
9 threads spent a total of 0.64711 seconds (11.3076 MB, 6942 rounds) on the online phase, 11.3545 seconds (1112.87 MB, 4616 rounds) on the preprocessing/offline phase, and 87.4245 seconds idling.
Join timer: 0 11034.9
Finish timer: 0.0114729
Join timer: 1 129.994
Finish timer: 0.0114729
Join timer: 2 0.004603
Finish timer: 0.0114729
Join timer: 3 0.023332
Finish timer: 0.0114729
Join timer: 4 0.001632
Finish timer: 0.0114729
Join timer: 5 0.00191
Finish timer: 0.0114729
Join timer: 6 42.3639
Finish timer: 0.0114729
Join timer: 7 14.8636
Finish timer: 0.0114729
Join timer: 8 0.002546
Finish timer: 0.0114729
Communication details (rounds in parallel threads counted double):
Exchanging one-to-one 737.289 MB in 1134 rounds, taking 2.21088 seconds
Receiving directly 11.3083 MB in 3472 rounds, taking 0.319085 seconds
Receiving one-to-one 376.367 MB in 1740 rounds, taking 0.0350498 seconds
Sending directly 11.3083 MB in 3472 rounds, taking 0.0509665 seconds
Sending one-to-one 375.581 MB in 1740 rounds, taking 0.00515396 seconds
CPU time = 8.99143 (overall core time)
The following benchmarks are including preprocessing (offline phase).
Time = 11.0464 seconds 
Time1 = 0.006162 ms (0 MB)
Data sent = 1124.18 MB in ~11558 rounds (party 0 only)
Global data sent = 2249.14 MB (all parties)
Actual cost of program:
  Type int
        352490        Triples
        190628           Bits
            40       Inverses
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_edabit(True)
This virtual machine was compiled with GCC. Recompile with 'CXX = clang++' in 'CONFIG.mine' for optimal performance.
Command line: ./semi-party.x -N 2 -e --ip-file-name /HOST -p 0 -v oram_tutorial
