Using statistical security parameter 40
Trying to run 64-bit computation
Current working directory: "/root/MP-SPDZ"
Starting timer 1 at 0 (0 MB, 0 rounds) after 1.2601e-05
Stopped timer 1 at 80.2988 (670.178 MB, 30912 rounds)
guess 1
Compiler: ./compile.py -R 64 -A benchmark_net
	503 triples of Z2^64 left
	888 dabits of Z2^64 left
Spent 1.49229 seconds (20.2696 MB, 26862 rounds) on the online phase and 78.8116 seconds (649.938 MB, 4082 rounds) on the preprocessing/offline phase.
Join timer: 0 80303.9
Finish timer: 0.00730076
Communication details:
Exchanging one-to-one 643.609 MB in 2520 rounds, taking 0.796723 seconds
Receiving directly 20.2696 MB in 13431 rounds, taking 1.14311 seconds
Receiving one-to-one 15.7785 MB in 781 rounds, taking 0.115855 seconds
Sending directly 20.2696 MB in 13431 rounds, taking 0.175388 seconds
Sending one-to-one 6.32906 MB in 781 rounds, taking 0.0135337 seconds
CPU time = 80.5767
The following benchmarks are including preprocessing (offline phase).
Time = 80.3113 seconds 
Time1 = 80298.8 ms (670.178 MB)
Data sent = 670.208 MB in ~30944 rounds (party 0 only)
Global data sent = 1349.87 MB (all parties)
Actual cost of program:
  Type int
       1256497        Triples
        786568           Bits
This program might benefit from some protocol options.
Consider adding the following at the beginning of your code:
	program.use_trunc_pr = True
	program.use_split(2)
This virtual machine was compiled with GCC. Recompile with 'CXX = clang++' in 'CONFIG.mine' for optimal performance.
Command line: ./semi2k-party.x -N 2 -e --ip-file-name /HOST -p 0 -v benchmark_net
